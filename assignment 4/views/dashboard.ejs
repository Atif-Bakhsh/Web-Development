<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bakhsh Studios</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/Styles/styles.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            background-color: #191919;
            color: #FFF;
        }
        #sidebar {
            background-color: #362000;
        }
        #sidebar .list-unstyled.components li a {
            color: white;
            padding: 12px;
            text-decoration: none; /* Added to remove underline */
        }
        #sidebar .list-unstyled.components li a:hover {
            background-color: #C0A171;
            color: #191919;
        }
        .navbar-backgroundclr {
            background-color: #191919;
        }
        .card {
            background-color: #272727;
            border: none;
            transition: border 0.3s ease;
        }
        .card:hover {
            border: 2px solid #ff6600; /* Orange color */
        }
        .card-body h5:nth-child(1) {
            color: var(--maroon-100, #C0A171);
            text-align: center;
            font-family: Satoshi;
            font-size: 12px;
            font-style: normal;
            font-weight: 500;
            line-height: 14px; /* 116.667% */
            text-transform: capitalize;
        }
        .card-body h5:nth-child(2) {
            color: var(--white, #FFF);
            text-align: center;
            font-family: Satoshi;
            font-size: 40px;
            font-style: normal;
            font-weight: 700;
            line-height: 48px; /* 120% */
            letter-spacing: -1px;
        }
        .container-fluid {
            padding: 20px;
        }
        .scrollable-table {
            max-height: 300px;
            overflow-y: auto;
            background-color: #272727;
        }
        .table-dark th,
        .table-dark td {
            color: white;
        }
        .margin-sidebar{
            margin-top: 40px;
        }
        .chart-card {
            background-color: #272727;
            border: none;
            padding: 10px;
            margin-bottom: 20px;
        }
        .chart-container {
            display: flex;
            justify-content: center;
            align-items: center;
        }
        #ordersChart {
            width: 500px !important;
            height: 500px !important;
        }
        #salesChart {
            width: 250px !important;
            height: 250px !important;
        }
    </style>
</head>
<body>
    <nav id="sidebar">
        <div class="sidebar-header">
            <h3>BlackoutGrill</h3>
        </div>
        <ul class="list-unstyled components">
            <li class="margin-sidebar"><a href="/dashboard">Dashboard</a></li>
            <li class="margin-sidebar"><a href="/orders">Orders</a></li>
            <li class="margin-sidebar"><a href="/products">Products</a></li>
            <li class="margin-sidebar"><a href="/clients">Clients</a></li>
        </ul>
    </nav>

    <div id="content">
        <nav class="navbar navbar-expand-lg navbar-dark navbar-backgroundclr">
            <div class="container-fluid">
                <a class="navbar-brand dashboard-title-heading" href="#">Dashboard</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNavDropdown">
                    <ul class="navbar-nav me-auto" id="auth-buttons">
                        <!-- Auth buttons will be inserted here -->
                    </ul>
                </div>
            </div>
        </nav>

        <div class="container-fluid">
            <div class="row">
                <div class="col-6">
                    <div class="row">
                        <div class="col-6">
                            <div class="card card-padding">
                                <div class="card-body">
                                    <h5>Total Revenue</h5>
                                    <h5 id="total-revenue">Loading...</h5>
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="card card-padding">
                                <div class="card-body">
                                    <h5>Total Orders Done</h5>
                                    <h5 id="total-orders-done">Loading...</h5>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <div class="card card-padding">
                                <div class="card-body">
                                    <h5>Total Clients</h5>
                                    <h5 id="total-clients">Loading...</h5>
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="card card-padding">
                                <div class="card-body">
                                    <h5>Total Products</h5>
                                    <h5 id="total-products">Loading...</h5>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-6">
                    <!-- <div class="card chart-card">
                        <div class="chart-container">
                            <canvas id="ordersChart"></canvas>
                        </div>
                    </div> -->
                </div>
            </div>
            <div class="row">
                <div class="col-8">
                    <h5>All Orders</h5>
                    <div class="scrollable-table">
                        <table class="table table-dark">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Order ID</th>
                                    <th>Item</th>
                                    <th>Quantity</th>
                                    <th>Amount</th>
                                    <th>Ordered By</th>
                                </tr>
                            </thead>
                            <tbody id="order-details">
                                <!-- Order details will be inserted here -->
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-4">
                    <!-- <div class="card chart-card">
                        <div class="chart-container">
                            <canvas id="salesChart"></canvas>
                        </div>
                    </div> -->
                </div>
            </div>
        </div>
    </div>

    <script>
        function getCookie(name) {
            let cookieArr = document.cookie.split(";");
            for (let i = 0; i < cookieArr.length; i++) {
                let cookiePair = cookieArr[i].split("=");
                if (name == cookiePair[0].trim()) {
                    return decodeURIComponent(cookiePair[1]);
                }
            }
            return null;
        }

        function updateAuthButtons() {
            const token = getCookie('token');
            const userId = getCookie('userId');
            const authButtons = document.getElementById('auth-buttons');

            if (token && userId) {
                authButtons.innerHTML = `
                    <li class="nav-item">
                        <a class="nav-link" href="/profile" id="profile-link"><img src="/Images/userLogo.png" alt="User Logo" style="width: 30px; height: 30px;"></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" id="signout">Sign Out</a>
                    </li>
                `;
            } else {
                authButtons.innerHTML = `
                    <li class="nav-item"><a class="nav-link" href="/login">Login</a></li>
                    <li class="nav-item"><a class="nav-link" href="/register">Sign Up</a></li>
                `;
            }
        }

        async function fetchStats() {
            try {
                const response = await fetch('/api/v1/stats/getStats');
                const data = await response.json();
                
                if (data.success) {
                    document.getElementById('total-revenue').textContent = data.stats.totalRevenue;
                    document.getElementById('total-orders-done').textContent = data.stats.totalOrdersDone;
                    document.getElementById('total-clients').textContent = data.stats.totalClients;
                    document.getElementById('total-products').textContent = data.stats.totalProducts;
                } else {
                    console.error('Error fetching stats:', data.message);
                }
            } catch (error) {
                console.error('Error fetching stats:', error);
            }
        }

        async function fetchOrders() {
            try {
                const token = getCookie('token');
                const response = await fetch('http://localhost:4000/api/v1/food/order/getOrders', {
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });
                const data = await response.json();

                if (data.success) {
                    const orderDetails = document.getElementById('order-details');
                    orderDetails.innerHTML = '';

                    data.orders.forEach(order => {
                        order.foods.forEach(food => {
                            const row = document.createElement('tr');

                            row.innerHTML = `
                                <td>${new Date(order.createdAt).toLocaleDateString()}</td>
                                <td>${order._id}</td>
                                <td>${food.name}</td>
                                <td>${food.quantity}</td>
                                <td>${food.price}</td>
                                <td>${order.buyer.userName}</td>
                            `;

                            orderDetails.appendChild(row);
                        });
                    });
                } else {
                    console.error('Error fetching orders:', data.message);
                }
            } catch (error) {
                console.error('Error fetching orders:', error);
            }
        }

        function renderOrdersChart() {
            var xValues = ["Delivered", "Pending", "Cancelled"];
            var yValues = [50, 30, 20];
            var barColors = ["#F94144", "#F3722C", "#F8961E"];

            new Chart("ordersChart", {
                type: "bar",
                data: {
                    labels: xValues,
                    datasets: [{
                        backgroundColor: barColors,
                        data: yValues
                    }]
                },
                options: {
                    title: {
                        display: true,
                        text: "Order Status Distribution"
                    }
                }
            });
        }

        function renderSalesChart() {
            var xValues = ["Burger", "Steak", "Salad", "Pasta", "Pizza"];
            var yValues = [120, 90, 60, 80, 100];
            var barColors = ["#F94144", "#F3722C", "#F8961E", "#43AA8B", "#577590"];

            new Chart("salesChart", {
                type: "pie",
                data: {
                    labels: xValues,
                    datasets: [{
                        backgroundColor: barColors,
                        data: yValues
                    }]
                },
                options: {
                    title: {
                        display: true,
                        text: "Sales per Food Item"
                    }
                }
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
            updateAuthButtons();
            fetchStats();
            fetchOrders();
            renderOrdersChart();
            renderSalesChart();

            document.getElementById('signout')?.addEventListener('click', function (event) {
                event.preventDefault();
                fetch('/api/v1/auth/logout', {
                    method: 'POST'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        document.cookie = 'token=; Max-Age=-99999999;';
                        document.cookie = 'userId=; Max-Age=-99999999;';
                        window.location.href = '/';
                    }
                });
            });
        });
    </script>

</body>
</html>
